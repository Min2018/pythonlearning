#
#
import numpy as np

# 矩阵操作
m0 = np.mat(a0)  # 数组转化为矩阵
m1 = np.mat([1,  2,  3])
m2 = np.mat([4,  5,  6])
m3 = m2.T  # 矩阵转置
m4 = m1*m3  # 举证相乘
m5 = np.multiply(m1,  m2)  # 矩阵点乘
m = np.mat([[2,  5,  1],  [8,  6,  0]])
m.sort()  # 矩阵排序，对各行数据分别排序
print(m.shape)  # 计算矩阵大小
# 扩展矩阵
x = np.mat([0,  2,  3])
x1 = np.tile(x,  (3,  2))

# 矩阵求逆
a1 = np.mat(np.eye(2,  2)*0.5)
a2 = a1.I
a1 = np.mat([[2,  5,  6],  [5,  8,  2],  [4,  6,  2]])

#  计算矩阵对应行列的最大、最小值、和
a1 = np.mat([[1, 1], [2, 3], [4, 2]])
a2 = a1.sum(axis=0)  # 列和，这里得到的是1*2的矩阵
a3 = a1.sum(axis=1)  # 行和，这里得到的是3*1的矩阵
a4 = sum(a1[1, :])  # 计算第一行所有列的和，这里得到的是一个数值
a1.max()  # 计算a1矩阵中所有元素的最大值,这里得到的结果是一个数值
a2 = max(a1[:, 1])  # 计算第二列的最大值，这里得到的是一个1*1的矩阵
a1[1, :].max()  # 计算第二行的最大值，这里得到的是一个一个数值

np.max(a1, 0)  # 计算所有列的最大值，这里使用的是numpy中的max函数
np.max(a1, 1)  # 计算所有行的最大值，这里得到是一个矩阵

np.argmax(a1, 0)  # 计算所有列的最大值对应在该列中的索引
np.argmax(a1[1, :])  # 计算第二行中最大值对应在改行的索引


#  矩阵拆分合并
c = np.vstack((a, b))  # 按列合并，即增加行数
d = np.hstack((a, b))  # 按行合并，即行数不变，扩展列数


#  矩阵、列表、数组的转换
a1 = [[1, 2], [3, 2], [5, 2]]  # 列表
a2 = np.array(a1)  # 将列表转换成二维数组
a3 = np.mat(a1)  # 将列表转化成矩阵
a4 = np.array(a3)  # 将矩阵转换成数组
a5 = a3.tolist()  # 将矩阵转换成列表
a6 = a2.tolist()  # 将数组转换成列表

